{"version":3,"file":"static/js/844.0356db3b.chunk.js","mappings":"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","sources":["common/miscelleneous/compactNumbers.js","common/miscelleneous/filterData.js","common/miscelleneous/randomColor.js","components/Charts/Calendar.jsx","components/Charts/ButtonGroup.jsx","components/Charts/HorizontalBarChart.jsx","components/Charts/ChartCanvas.jsx","components/Charts/ChartType.jsx","components/Charts/MultiCoinSelectionBtn.jsx","components/Charts/days.js","components/Charts/Charts.jsx","common/miscelleneous/currencyToSymbol.js","components/Currency/Currency.jsx","components/Exchange/DropDown.jsx","components/Exchange/Exchange.jsx","common/miscelleneous/exchangeRate.js","components/Header/Header.jsx","components/Portfolio/Data.js","components/Portfolio/PieChart.jsx","components/Portfolio/Portfolio.jsx","components/SearchBar/FilteredSearch.jsx","components/SearchBar/SearchBar.jsx","assets/caret-up.svg","assets/caret-down.svg","components/TopSection/CoinCard.jsx","components/TopSection/CoinList.jsx","components/TopSection/TopCoins.jsx","App.js"],"sourcesContent":["// function takes a number and returns its compact value\n// Ex : 1500000 => 1.5M\n\nexport const compactNumbers = (number) => {\n  const f = new Intl.NumberFormat(\"en-us\", {\n    notation: \"compact\",\n  });\n\n  return f.format(number);\n};\n","// function returns the 50 equidistant data points for displaying datapoints on charts\n// rather than displaying 1000s of data points.\nexport const filteredData = (data) => {\n  if (data) {\n    const interval = Math.floor(data.length / 11);\n    let currentIndex = 0;\n    const selectedItems = [];\n    for (let i = 0; i < 12; i++) {\n      selectedItems.push(data[currentIndex]);\n      currentIndex += interval;\n    }\n    return selectedItems;\n  } else {\n    return [];\n  }\n};  \n","// it generates the random color hexcode used in charts\n\nexport const getRandomColor = () => {\n  let letters = \"0123456789ABCDEF\".split(\"\");\n  let color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n","// Component renders the dropdown for date range selection with a submit button\n\n// Library imports\nimport React, { useState } from \"react\";\nimport { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\n// Files imports\nimport { fetchAsyncHistoricDataRange } from \"../../common/cryptoSlice/chartSlice\";\nimport {\n  setFromDate,\n  setToDate,\n  setIsCustomRange,\n} from \"../../common/cryptoSlice/cryptoSlice\";\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n\n  const fromDate = useSelector((state) => state.globalStore.fromDate);\n  const toDate = useSelector((state) => state.globalStore.toDate);\n\n  // converting yy-mm-dd into unix timestamp\n  const from = Math.floor(new Date(fromDate).getTime() / 1000);\n  const to = Math.floor(new Date(toDate).getTime() / 1000);\n\n  // global states from the store\n  const currency = useSelector((state) => state.globalStore.currency);\n  const coinIDs = useSelector((state) => state.globalStore.coinIDs);\n\n  // State to store whether the dropdown is visible or not\n  const [dropdownVisible, setDropdownVisible] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const fetchData = () => {\n    coinIDs.forEach((id) => {\n      dispatch(\n        fetchAsyncHistoricDataRange({\n          id,\n          currency: currency,\n          from: from,\n          to: to,\n        })\n      );\n    });\n  };\n\n  const handleClick = () => {\n    setIsSubmitted(true);\n    fetchData();\n    setDropdownVisible(false);\n    dispatch(setIsCustomRange(true));\n  };\n\n  return (\n    <div className=\"flex flex-col items-center relative  \">\n      <button\n        className={`relative font-semibold text-sm flex items-center\n        justify-between shadow  px-2 py-1 md:px-4 md:py-2 rounded ${\n          isSubmitted\n            ? \"bg-light-button-selected dark:bg-dark-button-selected hover:bg-light-button-selected-hover dark:hover:bg-dark-button-selected-hover\"\n            : \"bg-light-button dark:bg-dark-button hover:bg-light-button-hover dark:hover:bg-dark-button-hover font-semibold\"\n        }`}\n        onClick={() => setDropdownVisible(!dropdownVisible)}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"20\"\n          height=\"20\"\n          fill=\"currentColor\"\n          className=\"bi bi-calendar\"\n          viewBox=\"0 0 16 16\"\n        >\n          {\" \"}\n          <path d=\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z\" />{\" \"}\n        </svg>\n      </button>\n      {/* Dropdown with input fields to select the date range */}\n      <div\n        className={` absolute bg-light-fill dark:bg-dark-fill border z-10 top-10 border-black dark:border-white ${\n          dropdownVisible ? \"max-h-60\" : \"hidden\"\n        } `}\n      >\n        <div className=\" bg-light-fill dark:bg-dark-fill p-2 w-full overflow-y-auto border z-10 top-12 border-black dark:border-white shadow-xs\">\n          <div className=\"py-2\">\n            <label\n              className=\"block text-sm text-light-base dark:text-dark-base\"\n              htmlFor=\"start-date\"\n            >\n              Start Date\n            </label>\n            <input\n              className=\" py-2 px-4 block bg-light-muted dark:bg-dark-muted w-full overflow-y-auto border z-10 top-12 border-black dark:border-white leading-5 rounded-md transition duration-150 ease-in-out sm:text-sm sm:leading-5\"\n              id=\"start-date\"\n              type=\"date\"\n              value={fromDate}\n              onChange={(e) => dispatch(setFromDate(e.target.value))}\n            />\n          </div>\n          <div className=\"py-2\">\n            <label\n              className=\"block text-sm text-light-base dark:text-dark-base\"\n              htmlFor=\"end-date\"\n            >\n              End Date\n            </label>\n            <input\n              className=\"py-2 px-4 block bg-light-muted dark:bg-dark-muted w-full overflow-y-auto border z-10 top-12 border-black dark:border-white leading-5 rounded-md transition duration-150 ease-in-out sm:text-sm sm:leading-5\"\n              id=\"end-date\"\n              type=\"date\"\n              value={toDate}\n              onChange={(e) => dispatch(setToDate(e.target.value))}\n            />\n          </div>\n          <div className=\"py-2\">\n            <span className=\"block w-full rounded-md shadow-sm\">\n              <button\n                type=\"button\"\n                className=\"w-full  py-2 px-4 border border-transparent  rounded-md bg-light-button-selected dark:bg-dark-button-selected hover:bg-light-button-selected-hover dark:hover:bg-dark-button-selected-hover hover:text-white font-semibold text-sm flex items-center\n                justify-between shadow-lg transition duration-150 ease-in-out\"\n                onClick={handleClick}\n              >\n                Submit\n              </button>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n","// React component rendering buttons for different time intervals (1D, 1W, 1M, 1Y) along with a calendar component.\n\n// Library Imports\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// Redux action import\nimport { setIsCustomRange } from \"../../common/cryptoSlice/cryptoSlice\";\n\n// Component Imports\nimport Calendar from \"./Calendar\";\n\nconst ButtonGroup = ({ chartDays, setDays, setSelectedValue, selectedValue }) => {\n  // Redux dispatch hook\n  const dispatch = useDispatch();\n\n  // Function to handle button click and update state\n  const handleClick = (value) => {\n    setSelectedValue(value);\n    setDays(value);\n    dispatch(setIsCustomRange(false));\n  };\n\n  return (\n    <div className=\"flex md:gap-1 gap-2 flex-wrap\">\n      <div className=\"flex flex-wrap md:gap-1 gap-2 pb-1\">\n        {/* Mapping through time intervals and rendering buttons */}\n        {chartDays.map((day) => (\n          <button\n            key={day.value}\n            className={`px-2 py-1 md:px-4 md:py-2 bg-light-button dark:bg-dark-button hover:bg-light-button-hover dark:hover:bg-dark-button-hover font-semibold shadow text-sm rounded outline-none focus:outline-none ${\n              selectedValue === day.value\n                ? \"text-white bg-light-button-selected dark:bg-dark-button-selected hover:bg-light-button-selected-hover dark:hover:bg-dark-button-selected-hover\"\n                : \"bg-light-button dark:bg-dark-button\"\n            }`}\n            onClick={() => handleClick(day.value)}\n          >\n            {day.label}\n          </button>\n        ))}\n      </div>\n      {/* Rendering the Calendar component */}\n      <div>\n        <Calendar />\n      </div>\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","// React and Chart.js library imports\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\n\n// Chart.js components for registration\nimport {\n  BarElement,\n  LinearScale,\n  PointElement,\n  CategoryScale,\n  Chart as ChartJS,\n  Legend,\n  Tooltip,\n} from \"chart.js\";\n\n// Register necessary Chart.js components\nChartJS.register(\n  BarElement,\n  LinearScale,\n  PointElement,\n  CategoryScale,\n  Legend,\n  Tooltip\n);\n\n// Component for rendering a horizontal bar chart based on selected chart type\nconst HorizontalBarChart = ({ data, options }) => {\n  // Retrieve the selected chart type from global state\n  const chartType = useSelector((state) => state.globalStore.chartType);\n  \n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"99%\",\n        height: \"400px\",\n        marginTop: \"1rem\",\n      }}>\n      {/* Render the horizontal bar chart if the selected chart type is \"Horizontal Bar Chart\" */}\n      {chartType === \"Horizontal Bar Chart\" ? (\n        <Bar data={data} options={options} />\n      ) : null}\n    </div>\n  );\n};\n\n// Export the component\nexport default HorizontalBarChart;\n","// Component dynamically renders either a line chart or bar chart based on selected options, defaulting to line chart.\nimport React from \"react\";\n\n// Import necessary chart components from react-chartjs-2 and custom HorizontalBarChart\nimport { Bar, Line } from \"react-chartjs-2\";\nimport HorizontalBarChart from \"./HorizontalBarChart\";\n\n// Import Chart.js components for registration\nimport {\n  BarElement, \n  CategoryScale, \n  Chart as ChartJS, \n  Legend, \n  LineElement, \n  LinearScale, \n  PointElement, \n  Tooltip } \n  from \"chart.js\";\n\n// Import Redux hook for accessing global state\nimport { useSelector } from \"react-redux\";\n\n// Register Chart.js components\nChartJS.register(\n  BarElement, \n  LineElement, \n  CategoryScale, \n  LinearScale, \n  PointElement, \n  Legend, \n  Tooltip\n  );\n\n// Functional component rendering chart based on global store's selected chart type\nconst ChartCanvas = ({ data, options }) => {\n  const chartType = useSelector((state) => state.globalStore.chartType);\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"99%\",\n        height: \"400px\",\n        marginTop: \"1rem\",\n      }}>\n      {chartType === \"Bar Chart\" ? (\n        <Bar data={data} options={options} />\n      ) : chartType === \"Line Chart\" ? (\n        <Line data={data} options={options} /> \n      ) : (\n        chartType === \"Horizontal Bar Chart\" ? (\n          <HorizontalBarChart data={data} options={options} />\n        ) : null\n      )}\n    </div>\n  );\n};\n\nexport default ChartCanvas;\n","// Library imports for React functionality\nimport React from \"react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// File imports for Redux actions and selectors\nimport { setChartType } from \"../../common/cryptoSlice/cryptoSlice\";\n\n// Dropdown component to select chart type (Line, Bar, Horizontal Bar)\nconst ChartType = () => {\n  // Available chart options\n  const charts = [\"Line Chart\", \"Bar Chart\", \"Horizontal Bar Chart\"];\n\n  // State to manage dropdown visibility\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Redux store state and dispatch\n  const chartType = useSelector((state) => state.globalStore.chartType);\n  const dispatch = useDispatch();\n\n  // Ref for detecting clicks outside the dropdown to close it\n  const ref = useRef();\n\n  // Effect to handle clicks outside the dropdown to close it\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div ref={ref} className=\"relative\">\n      {/* Button to toggle dropdown visibility */}\n      <button\n        className=\"relative px-4 py-2 rounded bg-light-button dark:bg-dark-button hover:bg-light-button-hover dark:hover:bg-dark-button-hover font-semibold text-sm flex items-center justify-between shadow\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <p className=\"px-4\">{chartType}</p>\n        <span>\n          <svg\n            width=\"24px\"\n            height=\"24px\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`${isOpen ? \"-rotate-180\" : \"\"}`}\n          >\n            {/* Arrow icon for indicating dropdown direction */}\n            <path\n              d=\"M6.1018 8C5.02785 8 4.45387 9.2649 5.16108 10.0731L10.6829 16.3838C11.3801 17.1806 12.6197 17.1806 13.3169 16.3838L18.8388 10.0731C19.5459 9.2649 18.972 8 17.898 8H6.1018Z\"\n              fill=\"#000\"\n            />\n          </svg>\n        </span>\n      </button>\n\n      {/* Dropdown list for selecting chart type */}\n      <ul\n        className={` absolute bg-light-fill dark:bg-dark-fill w-full overflow-y-auto border z-10 top-12 border-black dark:border-white ${\n          isOpen ? \"max-h-60\" : \"hidden\"\n        } `}\n      >\n        {charts?.map((chart) => (\n          <li\n            key={chart}\n            className={`py-2 px-4 text-sm hover:bg-light-list-hover hover:text-white\n          ${chart === chartType && \"\"}`}\n            onClick={() => {\n              // Dispatch action to set selected chart type and close the dropdown\n              dispatch(setChartType(chart));\n              setIsOpen(false);\n            }}\n          >\n            {chart}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// Export the component\nexport default ChartType;\n","// React and Redux imports\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Redux actions for managing selected coins\nimport { setCoinIDs, setSelectedCoins } from \"../../common/cryptoSlice/cryptoSlice\";\n\n// Component for multi-selection dropdown of coins with checkboxes\nconst MultiCoinSelectionBtn = ({ coins }) => {\n  // State for managing dropdown visibility and search term\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Ref for detecting clicks outside the dropdown to close it\n  const ref = useRef();\n\n  // Redux store state and dispatch\n  const dispatch = useDispatch();\n  const selectedCoins = useSelector((state) => state.globalStore.selectedCoins);\n  const coinID = useSelector((state) => state.globalStore.coinIDs);\n\n  // Effect to handle clicks outside the dropdown to close it\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  // Effect to initialize selected coins and coin IDs when the coin list changes\n  useEffect(() => {\n    dispatch(\n      setSelectedCoins(\n        coins.filter((coin) => coin.name === \"Bitcoin\").map((coin) => coin.name)\n      )\n    );\n\n    dispatch(\n      setCoinIDs(\n        coins.filter((coin) => coin.name === \"Bitcoin\").map((coin) => coin.id)\n      )\n    );\n  }, [coins]);\n\n  // Filtered options based on the search term\n  const filteredOptions = coins.filter((coin) =>\n    coin?.name.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Function to handle checkbox changes and update selected coins and coin IDs\n  const handleCheckboxChange = (option, id) => {\n    if (selectedCoins.includes(option)) {\n      dispatch(\n        setSelectedCoins(\n          selectedCoins.filter((selectedOption) => selectedOption !== option)\n        )\n      );\n      dispatch(setCoinIDs(coinID.filter((selectedID) => selectedID !== id)));\n    } else if (selectedCoins.length < 2) {\n      dispatch(setSelectedCoins([...selectedCoins, option]));\n      dispatch(setCoinIDs([...coinID, id]));\n    }\n  };\n\n  // Render the component\n  return (\n    <div ref={ref} className={\"relative\"}>\n      {/* Button to toggle dropdown visibility */}\n      <button\n        className=\"min-w-full px-8 py-2 rounded-lg sm:w-full bg-light-button dark:bg-dark-button hover:bg-light-button-hover dark:hover:bg-dark-button-hover font-semibold text-sm flex items-center\n         justify-between shadow-lg focus:outline-none\"\n        onClick={() => setIsOpen((prevState) => !prevState)}\n      >\n        <p>\n          {selectedCoins.length > 0 ? selectedCoins.join(\", \") : \"Cryptocurrency\"}\n        </p>\n        <span>\n          <svg\n            width=\"24px\"\n            height=\"24px\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`${isOpen ? \"-rotate-180\" : \"\"}`}\n          >\n            {/* Arrow icon for indicating dropdown direction */}\n            <path\n              d=\"M6.1018 8C5.02785 8 4.45387 9.2649 5.16108 10.0731L10.6829 16.3838C11.3801 17.1806 12.6197 17.1806 13.3169 16.3838L18.8388 10.0731C19.5459 9.2649 18.972 8 17.898 8H6.1018Z\"\n              fill=\"#000\"\n            />\n          </svg>\n        </span>\n      </button>\n\n      {/* Dropdown with checkboxes for selecting coins */}\n      {isOpen && (\n        <div className=\"absolute h-60 overflow-auto border border-black dark:border-white left-0 z-30 mt-2 py-2 w-full flex flex-col rounded-md bg-light-fill dark:bg-dark-fill shadow-xl\">\n          {/* Search input for filtering options */}\n          <input\n            className={`bg-light-fill dark:bg-dark-fill p-2 outline-none border-b border-black dark:border-white `}\n            value={searchTerm}\n            onChange={(event) => setSearchTerm(event.target.value)}\n            placeholder=\"Search coins...\"\n          />\n\n          {/* List of checkboxes for each coin option */}\n          {filteredOptions.map((coin) => (\n            <label\n              className={`w-full py-2 text-sm leading-5 text-left focus:outline-none hover:bg-light-list-hover transition duration-150 ease-in-out ${\n                selectedCoins.includes(coin?.name) || selectedCoins.length >= 2\n                  ? \"text-gray-500 cursor-not-allowed\"\n                  : \"\"\n              }`}\n              key={coin?.id}\n            >\n              <input\n                className=\"mx-4 text-sm\"\n                type=\"checkbox\"\n                disabled={\n                  selectedCoins.length >= 2 &&\n                  !selectedCoins.includes(coin?.name)\n                }\n                checked={selectedCoins.includes(coin?.name)}\n                onChange={() => handleCheckboxChange(coin?.name, coin?.id)}\n                onClick={() => {\n                  setSearchTerm(\"\");\n                }}\n              />\n              {coin?.name}\n            </label>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Export the component\nexport default MultiCoinSelectionBtn;\n","// Chart days configuration with labels and corresponding values in days\nexport const chartDays = [\n  {\n    label: \"1D\",\n    value: 1,\n  },\n  {\n    label: \"1W\",\n    value: 7,\n  },\n  {\n    label: \"1M\",\n    value: 30,\n  },\n  {\n    label: \"6M\",\n    value: 180,\n  },\n  {\n    label: \"1Y\",\n    value: 365,\n  },\n];\n\n// Chart type options (Line Chart, Bar Chart)\nexport const chartType = [\"Line Chart\", \"Bar Chart\"];\n","// Library and file imports\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// Function imports for fetching, filtering, and styling data\nimport {\n  clearData,\n  fetchAsyncHistoricData,\n} from \"../../common/cryptoSlice/chartSlice\";\nimport { getAllCoins } from \"../../common/cryptoSlice/coinsSlice\";\nimport { compactNumbers } from \"../../common/miscelleneous/compactNumbers\";\nimport { filteredData } from \"../../common/miscelleneous/filterData\";\nimport { getRandomColor } from \"../../common/miscelleneous/randomColor\";\n\n// Component imports\nimport ButtonGroup from \"./ButtonGroup\";\nimport ChartCanvas from \"./ChartCanvas\";\nimport HorizontalBarChart from \"./HorizontalBarChart\";\nimport ChartType from \"./ChartType\";\nimport MultiCoinSelectionBtn from \"./MultiCoinSelectionBtn\";\nimport { chartDays } from \"./days\";\n\n// Main component for rendering charts based on selected coins, date ranges, and chart type\nconst Charts = () => {\n  const dispatch = useDispatch();\n  const [days, setDays] = useState(1);\n  const [selectedValue, setSelectedValue] = useState(null);\n\n  // Redux store state variables\n  const currency = useSelector((state) => state.globalStore.currency);\n  const symbol = useSelector((state) => state.globalStore.symbol);\n  const isCustomRange = useSelector((state) => state.globalStore.isCustomRange);\n  const chartType = useSelector((state) => state.globalStore.chartType);\n  const coinIDs = useSelector((state) => state.globalStore.coinIDs);\n  const marketCapData = useSelector((state) => state.market.data);\n  const loading = useSelector((state) => state.market.loading);\n  // Function to fetch historical data based on selected parameters\n  const fetchData = () => {\n    coinIDs.forEach((id) => {\n      dispatch(fetchAsyncHistoricData({ id, currency: currency, days: days }));\n    });\n  };\n\n  // Effect to fetch data when currency, coinIDs, or days change\n  useEffect(() => {\n    if (!isCustomRange) {\n      fetchData();\n      dispatch(clearData());\n    }\n  }, [currency, coinIDs, days]);\n\n  // Redux selector to get all available coins\n  const coins = useSelector(getAllCoins);\n\n  // Filtered data for the selected coin\n  const cdata = filteredData(marketCapData[coinIDs[0]]);\n\n  // Loading indicator\n  if (loading) {\n    return <div className=\"h-[260px] text-center p-4\">Loading...</div>;\n  }\n\n  // Labels for the chart based on the selected date range\n  const labels = cdata.map((data) => {\n    let date = new Date(data[0]);\n    let time =\n      date.getHours() > 12\n        ? `${date.getHours() - 12} PM`\n        : `${date.getHours()} AM`;\n    return days === 1\n      ? time\n      : date.toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" });\n  });\n\n  // Datasets for the chart based on selected coins\n  const datasets = Object.keys(marketCapData).map((id) => ({\n    label: id,\n    data: filteredData(marketCapData[id]).map((datum) => datum[1]),\n    fill: false,\n    borderColor: getRandomColor(),\n    tension: 0.1,\n    pointColor: getRandomColor(),\n    backgroundColor: getRandomColor(),\n    hitRadius: 20,\n    hoverRadius: 5,\n  }));\n\n  // Chart data object\n  const data = {\n    labels: labels,\n    datasets: datasets,\n  };\n\n  // Chart scale options for normal and horizontal bar charts\n  const normalChartScale = {\n    y: {\n      ticks: {\n        callback: function (value, index, ticks) {\n          return `${symbol}` + compactNumbers(value);\n        },\n        maxTicksLimit: 7,\n        grid: {\n          borderWidth: 2,\n          borderDash: [5, 5],\n          borderDashOffset: 2,\n        },\n      },\n    },\n  };\n\n  const horizontalBarChartScale = {\n    x: {\n      ticks: {\n        callback: function (value, index, ticks) {\n          return `${symbol}` + compactNumbers(value);\n        },\n        maxTicksLimit: 7,\n        grid: {\n          borderWidth: 2,\n          borderDash: [5, 5],\n          borderDashOffset: 2,\n        },\n      },\n    },\n  };\n\n  // Chart options\n  const options = {\n    indexAxis: chartType === \"Horizontal Bar Chart\" ? 'y' : 'x',\n    interaction: {\n      intersect: false,\n      mode: \"index\",\n    },\n    aspectRatio: 2,\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: chartType === \"Horizontal Bar Chart\" ? horizontalBarChartScale : normalChartScale,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || \"\";\n            if (label) {\n              label += \": \";\n            }\n            if (context.parsed.y !== null) {\n              label += `${symbol}` + compactNumbers(context.parsed.y);\n            }\n            return label;\n          },\n        },\n      },\n      title: {\n        display: true,\n        text: \"Charts Canvas\",\n      },\n      datalabels: {\n        display: false,\n      },\n      legend: {\n        position: \"top\",\n        fullWidth: false,\n        labels: {\n          color: \"#5C5C5C\",\n          usePointStyle: true,\n          font: {\n            size: 12,\n            weight: \"bold\",\n          },\n        },\n      },\n    },\n  };\n\n  // Render the component\n  return (\n    <Fragment>\n      {marketCapData && (\n        <div className=\"bg-light-fill dark:bg-dark-fill rounded-lg\">\n          <div className=\" flex justify-around pt-4 flex-wrap gap-1\">\n            <ButtonGroup\n              chartDays={chartDays}\n              setDays={setDays}\n              setSelectedValue={setSelectedValue}\n              selectedValue={selectedValue}\n            />\n            <div className=\" flex gap-2 items-center justify-center flex-wrap\">\n              <MultiCoinSelectionBtn coins={coins} />\n              <ChartType />\n            </div>\n          </div>\n          <ChartCanvas data={data} options={options} />\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\n// Export the component\nexport default Charts;\n","// Funtion takes the currency name and returns it's symbol.\n// Ex : USD => $\n\nconst currencySymbols = {\n  btc: \"₿\",\n  eth: \"Ξ\",\n  ltc: \"Ł\",\n  bch: \"Ƀ\",\n  bnb: \"Ƀ\",\n  eos: \"ε\",\n  xrp: \"✕\",\n  xlm: \"✕\",\n  link: \"Ł\",\n  dot: \"●\",\n  aed: \"D\",\n  ars: \"$\",\n  aud: \"$\",\n  bdt: \"৳\",\n  brl: \"$\",\n  cad: \"$\",\n  clp: \"$\",\n  cny: \"¥\",\n  czk: \"Kč\",\n  dkk: \"Kr.\",\n  hkd: \"$\",\n  huf: \"Ft\",\n  idr: \"Rp\",\n  kwd: \"KD\",\n  lkr: \"௹\",\n  mmk: \"K\",\n  mxn: \"$\",\n  myr: \"RM\",\n  ngn: \"₦\",\n  nok: \"kr\",\n  nzd: \"$\",\n  pkr: \"₨\",\n  pln: \"zł\",\n  rub: \"₽\",\n  sar: \"SR\",\n  sek: \"kr\",\n  sgd: \"$\",\n  thb: \"฿\",\n  try: \"₺\",\n  uah: \"₴\",\n  vef: \"Bs.\",\n  zar: \"R\",\n  bits: \"b\",\n  sats: \"ȿ\",\n};\n\nexport const convertCurrency = (currencyName) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: currencyName,\n  });\n  const formatted = formatter.format(0).slice(0, 1);\n  if (formatted.toLowerCase() === currencyName.slice(0, 1)) {\n    // Currency not recognized\n    return (\n      currencySymbols[currencyName] || currencyName.slice(0, 1).toUpperCase()\n    );\n  } else {\n    return formatted;\n  }\n};\n","// component renders a dropdown selector with list of supported currencies\n\n// Library imports\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// File imports\nimport { setCurrency, setSymbol } from \"../../common/cryptoSlice/cryptoSlice\";\nimport { fetchAsyncCurrencies } from \"../../common/cryptoSlice/CurrencySlice\";\nimport { convertCurrency } from \"../../common/miscelleneous/currencyToSymbol\";\n\nconst Currency = () => {\n  const dispatch = useDispatch();\n  const ref = useRef();\n\n  const currencies = useSelector((state) => state.currencies.data);\n  const error = useSelector((state) => state.currencies.error);\n  const loading = useSelector((state) => state.currencies.loading);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // setting default currency and symbol in a global state\n  const currency = useSelector((state) => state.globalStore.currency);\n\n  const fetchCurrencies = () => {\n    dispatch(fetchAsyncCurrencies());\n  };\n  useEffect(() => {\n    fetchCurrencies();\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [dispatch]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center animate-pulse bg-white dark:bg-dark-button h-full\">\n        Loading...\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div ref={ref} className=\"relative flex items-center justify-center\">\n      <button\n        className=\" min-w-full h-[3.5rem] flex items-center justify-between  bg-white dark:bg-dark-button font-bold  hover:bg-slate-200 dark:hover:bg-dark-button-hover shadow-lg\"\n        onClick={() => setIsOpen(!isOpen)}>\n        <p className=\"text-center\">{currency.toUpperCase()}</p>\n        <span>\n          <svg\n            width=\"20px\"\n            height=\"20px\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`${isOpen ? \"-rotate-180\" : \"\"}`}>\n            <path\n              d=\"M6.1018 8C5.02785 8 4.45387 9.2649 5.16108 10.0731L10.6829 16.3838C11.3801 17.1806 12.6197 17.1806 13.3169 16.3838L18.8388 10.0731C19.5459 9.2649 18.972 8 17.898 8H6.1018Z\"\n              fill=\"#000\"\n            />\n          </svg>\n        </span>\n      </button>\n\n      <div\n        className={`absolute top-full max-h-60 overflow-y-auto border-2 border-black min-w-full w-max bg-light-fill dark:bg-dark-fill z-10 mt-1 rounded-lg shadow-xl ${\n          isOpen ? \"block\" : \"hidden\"\n        }`}>\n        <ul className=\"\">\n          {currencies.map((currency) => (\n            <li\n              key={currency}\n              className={`p-4 cursor-pointer hover:bg-light-list-hover dark:hover:bg-dark-list-hover font-bold  hover:text-white rounded-lg `}\n              onClick={() => {\n                dispatch(setCurrency(currency));\n                dispatch(setSymbol(convertCurrency(currency)));\n                setIsOpen(false);\n              }}>\n              {currency.toUpperCase()}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Currency;\n","// React and Redux imports\nimport React, { Fragment, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// Component for rendering a dropdown to select a coin\nconst DropDown = ({ coins, setPrice, search }) => {\n  // State for input value, selected coin, and dropdown visibility\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selected, setSelected] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Redux dispatch for actions\n  const dispatch = useDispatch();\n\n  // Render the component\n  return (\n    <Fragment>\n      {/* Button to toggle dropdown visibility */}\n      <button\n        className=\"col-span-3 bg-light-button dark:bg-dark-button hover:bg-light-button-hover dark:hover:bg-dark-button-hover font-semibold text-sm flex items-center\n         justify-center shadow-lg\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <p className=\"px-4\">\n          {selected\n            ? selected?.length > 25\n              ? selected?.substring(0, 25) + \"...\"\n              : selected\n            : \"Select Coin\"}\n        </p>\n        <span>\n          <svg\n            width=\"24px\"\n            height=\"24px\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className={`${isOpen ? \"-rotate-180\" : \"\"}`}\n          >\n            {/* Arrow icon for indicating dropdown direction */}\n            <path\n              d=\"M6.1018 8C5.02785 8 4.45387 9.2649 5.16108 10.0731L10.6829 16.3838C11.3801 17.1806 12.6197 17.1806 13.3169 16.3838L18.8388 10.0731C19.5459 9.2649 18.972 8 17.898 8H6.1018Z\"\n              fill=\"#000\"\n            />\n          </svg>\n        </span>\n      </button>\n\n      {/* Dropdown with search input and coin options */}\n      <ul\n        className={` absolute bg-light-fill dark:bg-dark-fill overflow-y-auto border z-10 border-black dark:border-white  ${\n          isOpen ? \"max-h-40\" : \"hidden\"\n        } `}\n      >\n        {search && (\n          <div className=\"flex items-center px-2 min-w-min\">\n            {/* Input field for searching coins */}\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value.toLowerCase())}\n              placeholder=\"Search currency...\"\n              className={`bg-light-fill dark:bg-dark-fill p-2 outline-none`}\n            />\n          </div>\n        )}\n\n        {/* List of coin options */}\n        {coins?.map((coin) => (\n          <li\n            key={coin?.name}\n            className={`py-2 px-4 text-sm hover:bg-dark-list-hover hover:text-white\n          ${\n            coin?.name?.toLowerCase() === selected?.toLowerCase() &&\n            \"bg-light-list-selected text-white\"\n          }\n          ${\n            coin?.name?.toLowerCase().startsWith(inputValue)\n              ? \"block\"\n              : \"hidden\"\n          }`}\n            onClick={() => {\n              // Set selected coin, close dropdown, reset input, and dispatch action\n              if (coin?.name?.toLowerCase() !== selected.toLowerCase()) {\n                setSelected(coin?.name);\n                setIsOpen(false);\n                setInputValue(\"\");\n                dispatch(setPrice(coin));\n              }\n            }}\n          >\n            {coin?.name}\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\n// Export the component\nexport default DropDown;\n","// React and Redux imports\nimport React from \"react\";\nimport { useState, Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// Custom function imports\nimport { getAllCoins } from \"../../common/cryptoSlice/coinsSlice\";\nimport { setPrice_s, setPrice_b } from \"../../common/cryptoSlice/cryptoSlice\";\nimport { convertExchangeRates } from \"../../common/miscelleneous/exchangeRate\";\n\n// Component imports\nimport DropDown from \"./DropDown\";\n\n// Exchange component for selecting coins, entering amount, and performing exchange\nconst Exchange = () => {\n  // Redux state for available coins, sell and buy prices\n  const coins = useSelector(getAllCoins);\n  const [amount, setAmount] = useState(\"\");\n  const [exchangeResult, setExchangeResult] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  // Sell and buy prices from Redux state\n  const sellPrice = useSelector((state) => state.globalStore.price_s);\n  const buyPrice = useSelector((state) => state.globalStore.price_b);\n\n  // Handle change in the input amount\n  const handleChange = (e) => {\n    const inputValue = e.target.value;\n    if (inputValue > 2) {\n      setError(\"Amount should be less than 2\");\n    } else {\n      setError(null);\n      setAmount(inputValue);\n    }\n  };\n\n  // Render the component\n  return (\n    <Fragment>\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"p-4 font-bold\">Exchange Coins</h1>\n        <p className=\"font-semibold text-xs pr-12 pt-8 text-light-muted dark:text-dark-muted\">\n          Enter value\n        </p>\n      </div>\n      <div className=\"grid grid-cols-6 gap-4 md:gap-2 items-center justify-center px-4 pb-4\">\n        <h3 className=\"col-span-1 text-red-500 font-semibold\">Sell</h3>\n        <div className=\"relative col-span-3\">\n          {/* Dropdown for selecting coins to sell */}\n          <DropDown coins={coins} setPrice={setPrice_s} search={true} />\n        </div>\n        <div className=\" col-span-2 place-self-center flex-1 py-2 px-2 bg-light-fill dark:bg-dark-fill\">\n          {/* Input for entering the amount to sell */}\n          <input\n            type=\"number\"\n            min={0.1}\n            required\n            className=\" col-span-2 w-24 flex-1 py-2 px-2 text-xs border-2 bg-light-fill dark:bg-dark-fill border-black dark:border-white \"\n            placeholder=\"Amt:\"\n            value={amount}\n            onChange={handleChange}\n          />\n          {/* Display error message if amount exceeds 2 */}\n          {error && (\n            <p className=\"place-self-center text-red-400 font-semibold text-sm\">\n              {error}\n            </p>\n          )}\n        </div>\n      </div>\n      <div className=\"grid grid-cols-6 gap-4 md:gap-2 items-center px-4 pb-4\">\n        <h3 className=\"col-span-1 text-green-500 font-semibold\">Buy</h3>\n        <div className=\"relative col-span-3\">\n          {/* Dropdown for selecting coins to buy */}\n          <DropDown coins={coins} setPrice={setPrice_b} search={true} />\n        </div>\n        <p className=\"col-span-2 place-self-center text-red-400 font-semibold text-sm\">\n          {isNaN(exchangeResult)\n            ? \"Select currencies and enter the amount\"\n            : exchangeResult}{\" \"}\n          {buyPrice?.symbol}\n        </p>\n      </div>\n      <div className=\"flex items-center justify-center pb-2 pt-4\">\n        {/* Button for performing the exchange */}\n        <button\n          className=\"bg-light-button-selected dark:bg-dark-button-selected hover:bg-light-button-selected-hover dark:hover:bg-dark-button-selected-hover font-semibold hover:text-white\"\n          onClick={() =>\n            setExchangeResult(\n              convertExchangeRates(\n                sellPrice.current_price,\n                buyPrice.current_price,\n                amount\n              )\n            )\n          }\n        >\n          Exchange\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\n// Export the component\nexport default Exchange;\n","// Takes the prices of both selected coins and amount. returns a exchanged amount\n\nexport const convertExchangeRates = (sellPrice, buyPrice, amount) => {\n  if (sellPrice === \"\" || buyPrice === \"\") {\n    console.log(\"select both currencies\");\n  }\n\n  const exchangeRate = Number(sellPrice) / Number(buyPrice);\n  return (exchangeRate * amount).toFixed(2);\n};\n","// component displays the logo and theme implementation.\n\n// Library imports\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\n// Assets\nimport logo from \"../../assets/logo.png\";\n\nconst Header = () => {\n  const [theme, setTheme] = useState(\"light\");\n  const element = document.documentElement;\n\n  const options = [\n    {\n      icon: \"🌞\",\n      text: \"light\",\n    },\n    {\n      icon: \"🌙\",\n      text: \"dark\",\n    },\n  ];\n\n  useEffect(() => {\n    switch (theme) {\n      case \"dark\":\n        element.classList.add(\"dark\");\n        break;\n\n      case \"light\":\n        element.classList.remove(\"dark\");\n        break;\n\n      default:\n        break;\n    }\n  }, [theme]);\n  return (\n    <div className=\"shadow-md  p-1 flex items-center justify-between \">\n      <img\n        className=\"w-32 mx-4 p-1 bg-light-fill rounded \"\n        src={logo}\n        alt=\"Almabetter cryptocurrency dashboard\"\n      />\n\n      {/* Light/dark theme implementation */}\n      <div className=\"mx-8 top-2 right-10 flex duration-100\">\n        {options.map((option) => (\n          <button\n            key={option.text}\n            onClick={() => setTheme(option.text)}\n            className={`text-l rounded-lg mx-1 bg-light-button dark:bg-dark-button hover:bg-light-button-hover dark:hover:bg-dark-button-hover ${\n              theme === option.text &&\n              \"bg-light-list-selected dark:bg-dark-list-selected hover:bg-light-list-hover dark:hover:bg-dark-list-hover\"\n            }`}\n          >\n            {option.icon}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","export const portfolioDetails = [\n  { name: \"Tether\", amount: 375, id: 0 },\n  { name: \"Luna\", amount: 375, id: 1 },\n  { name: \"Ethereum\", amount: 250, id: 2 },\n];\n","import React from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\nimport { Pie } from \"react-chartjs-2\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\n\n// Registering necessary Chart.js components\nChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels);\n\nconst PieChart = ({ data, labels }) => {\n  // Data configuration for the pie chart\n  const chartData = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"$\",\n        data: data,\n        backgroundColor: [\"gray\", \"blue\", \"green\"],\n        borderWidth: 1,\n        hoverOffset: 8,\n      },\n    ],\n  };\n\n  // Options configuration for the pie chart\n  const options = {\n    aspectRatio: 2,\n    plugins: {\n      // Legend configuration\n      legend: {\n        position: \"right\",\n        fullWidth: false,\n        labels: {\n          color: \"#5c5c5c\",\n          padding: 20,\n          usePointStyle: true,\n          font: {\n            size: 12,\n            weight: \"bold\",\n          },\n        },\n      },\n      // Data labels configuration\n      datalabels: {\n        align: \"center\",\n        color: \"#FFF\",\n        font: {\n          size: 18,\n          weight: \"bold\",\n        },\n        formatter: (value, context) => {\n          return \"$\" + value;\n        },\n      },\n    },\n  };\n\n  // Plugins configuration for the pie chart\n  const plugins = {\n    plugins: [ChartDataLabels],\n  };\n\n  return (\n    // Container for the pie chart\n    <div className=\"pl-5 flex items-center justify-center pt-4 pb-4 w-[350px]\">\n      {/* Pie chart component */}\n      <Pie data={chartData} options={options} plugins={plugins}></Pie>\n    </div>\n  );\n};\n\nexport default PieChart;\n","// component renders the pie charts based on the values in get in json format\n\n// Library imports\nimport React from \"react\";\nimport { Fragment } from \"react\";\n\n// Files imports\nimport { portfolioDetails } from \"./Data\";\n\n// component imports\nimport PieChart from \"./PieChart\";\n\nconst Portfolio = () => {\n  // Total value of the portfolio\n  const totalValue = portfolioDetails\n    .map((d) => d.amount)\n    .reduce((sum, amount) => sum + amount, 0);\n\n  const labels = portfolioDetails.map((p) => p.name);\n  const data = portfolioDetails.map((p) => p.amount);\n\n  return (\n    <Fragment>\n      <div className=\"flex items-center justify-between pt-4 px-8 text-light-base dark:text-dark-base\">\n        <h1 className=\"font-bold\">Portfolio</h1>\n        <p className=\"font-semibold text-sm\">\n          Total value :{\" \"}\n          <span className=\"font-semibold text-light-muted dark:text-dark-muted\">\n            ${totalValue}\n          </span>{\" \"}\n        </p>\n      </div>\n      <PieChart labels={labels} data={data} />\n    </Fragment>\n  );\n};\n\nexport default Portfolio;\n","// component renders the filtered coins\n\n// Library imports\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAsyncHistoricData } from \"../../common/cryptoSlice/chartSlice\";\n\nconst FilteredSearch = ({ coin, setIsOpen, setCoin }) => {\n  const symbol = useSelector((state) => state.globalStore.symbol);\n  const coinIds = useSelector((state) => state.globalStore.coinIds);\n  const days = useSelector((state) => state.globalStore.days);\n  const dispatch = useDispatch();\n\n  return (\n    <div\n      className=\"cursor-pointer py-4 px-4 hover:bg-light-list-hover dark:hover:bg-dark-list-hover rounded-lg font-semibold flex justify-around items-center\"\n      onClick={(e) => {\n        e.preventDefault();\n        setIsOpen(false);\n        setCoin(coin?.name);\n        dispatch(\n          fetchAsyncHistoricData({\n            id: coin,\n            currency: symbol,\n            days: days,\n          })\n        );\n      }}>\n      <img src={coin?.image} alt={coin?.name} width=\"40px\" />\n      <div className=\"\">{coin?.name}</div>\n      <div className=\"\">\n        {symbol}\n        {coin?.current_price}\n      </div>\n    </div>\n  );\n};\n\nexport default FilteredSearch;\n","// component renders a input field which filters the data based on what the user enters\n// and displays in a dropdown.\n\n// Library imports\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// Files imports\nimport { getAllCoins } from \"../../common/cryptoSlice/coinsSlice\";\nimport FilteredSearch from \"./FilteredSearch\";\n\nconst SearchBar = () => {\n  const coins = useSelector(getAllCoins);\n\n  const [search, setSearch] = useState([]);\n  const [coin, setCoin] = useState(\"\"); // Use this state for the input field value\n  const [isOpen, setIsOpen] = useState(false);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n  };\n\n  const searchChangeHandler = (e) => {\n    const searchWord = e.target.value;\n    const filteredArray = coins.filter((coin) =>\n      coin?.name?.toLowerCase().includes(searchWord.toLowerCase())\n    );\n    setCoin(searchWord); // Update the 'coin' state\n    searchWord === \"\" ? setSearch([]) : setSearch(filteredArray);\n  };\n\n  return (\n    <div className=\"relative\">\n      <form onSubmit={submitHandler}>\n        <div className={\"flex justify-between overflow-hidden border rounded-lg shadow-xl border-white dark:border-black\"}>\n          <input\n            type=\"text\"\n            className=\"block w-full flex-1 py-4 px-4 bg-light-fill dark:bg-dark-fill font-semibold\"\n            placeholder=\"Search By Coin\"\n            id=\"search\"\n            value={coin} // Use 'coin' state for the input field value\n            onChange={searchChangeHandler}\n            onClick={() => {\n              setIsOpen(!isOpen);\n            }}\n          />\n        </div>\n      </form>\n\n      {search.length !== 0 && (\n        <div className={`absolute w-full z-20 flex flex-col border-2 border-black overflow-hidden shadow-xl bg-light-fill dark:bg-dark-fill rounded-lg ${isOpen ? \"\" : \"hidden\"}`}>\n          {search.slice(0, 3).map((coin) => (\n            <FilteredSearch\n              coin={coin}\n              key={coin.id}\n              setIsOpen={setIsOpen}\n              setCoin={setCoin}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar; ","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCaretUp(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.1018 16.9814C5.02785 16.9814 4.45387 15.7165 5.16108 14.9083L10.6829 8.59762C11.3801 7.80079 12.6197 7.80079 13.3169 8.59762L18.8388 14.9083C19.5459 15.7165 18.972 16.9814 17.898 16.9814H6.1018Z\",\n    fill: \"rgb(34 197 94)\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCaretUp);\nexport default __webpack_public_path__ + \"static/media/caret-up.4161edd01671108336a744b2a2258080.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCaretDown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.1018 8C5.02785 8 4.45387 9.2649 5.16108 10.0731L10.6829 16.3838C11.3801 17.1806 12.6197 17.1806 13.3169 16.3838L18.8388 10.0731C19.5459 9.2649 18.972 8 17.898 8H6.1018Z\",\n    fill: \"rgb(239 68 68)\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCaretDown);\nexport default __webpack_public_path__ + \"static/media/caret-down.7b79aaa5dd7a6139fb08c675ba055136.svg\";\nexport { ForwardRef as ReactComponent };","// component renders the coin name and it's mcap.\n//  also renders the 24h percentage change.\n\n// Library imports\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n// Files imports\nimport upArrow from \"../../assets/caret-up.svg\";\nimport downArrow from \"../../assets/caret-down.svg\";\nimport { compactNumbers } from \"../../common/miscelleneous/compactNumbers\";\n\nconst CoinCard = ({ coin }) => {\n  const symbol = useSelector((state) => state.globalStore.symbol);\n\n  return (\n    <div className=\"flex justify-between items-center p-2 cursor-pointer duration-300\">\n      <div className=\"\">\n        <div className=\"font-bold pb-1 text-sm\">{coin?.name}</div>\n        <div className=\"font-semibold text-xs text-light-muted dark:text-dark-muted\">\n          Mkt.Cap: {symbol}\n          {compactNumbers(coin?.market_cap)}\n        </div>\n      </div>\n      <div className=\"col-span-1 flex flex-nowrap gap-x-1\">\n        <img\n          src={coin?.price_change_percentage_24h > 0 ? upArrow : downArrow}\n          alt=\"arrow\"\n        />\n        <div\n          className={`font-semibold  ${\n            coin?.price_change_percentage_24h > 0\n              ? \"text-green-500\"\n              : \"text-red-500\"\n          }`}\n        >\n          {`${coin?.price_change_percentage_24h.toFixed(2)}%`}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CoinCard;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getAllCoins } from \"../../common/cryptoSlice/coinsSlice\";\nimport CoinCard from \"./CoinCard\";\n\nconst CoinList = () => {\n  const coins = useSelector(getAllCoins);\n\n  return (\n    <div className=\"pt-4 px-2  overflow-hidden\">\n      <div className=\"text-l mb-4 text-center font-semibold\">\n        Cryptocurrencies By Market Cap\n      </div>\n      <div className=\"\">\n        {coins?.slice(0, 14).map((coin) => (\n          <CoinCard coin={coin} key={coin.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CoinList;\n","// Component renders the list the coins sorted by marketcap\n\n// Library imports\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n// Files imports\nimport { fetchAsyncCoins } from \"../../common/cryptoSlice/coinsSlice\";\n\n// Component imports\nimport CoinList from \"./CoinList\";\n\nconst TopCoins = ({ currency }) => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    dispatch(fetchAsyncCoins(currency));\n    setLoading(false);\n  }, [dispatch, currency]);\n\n  return loading ? (\n    <div>Loading...</div>\n  ) : (\n    <div className=\"\">\n      <CoinList />\n    </div>\n  );\n};\n\nexport default TopCoins;\n","// React component for the main application.\n// It includes various sections such as charts, currency settings, search bar, portfolio, exchange, and top coins.\n\n// Library Imports\nimport { useSelector } from \"react-redux\";\nimport Charts from \"./components/Charts/Charts.jsx\";\n\n// Component Imports\nimport Currency from \"./components/Currency/Currency.jsx\";\nimport Exchange from \"./components/Exchange/Exchange.jsx\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Portfolio from \"./components/Portfolio/Portfolio.jsx\";\nimport SearchBar from \"./components/SearchBar/SearchBar.jsx\";\nimport TopCoins from \"./components/TopSection/TopCoins.jsx\";\n\nfunction App() {\n  // Redux selector to access global store state\n  const currency = useSelector((state) => state.globalStore.currency);\n  const symbol = useSelector((state) => state.globalStore.symbol);\n\n  return (\n    <div className=\"min-h-screen bg-light-fill dark:bg-dark-fill text-light-base dark:text-dark-base\">\n      {/* Header Component */}\n      <header className=\"\">\n        <Header />\n      </header>\n\n      {/* Main content Area */}\n      <div className=\"p-4\">\n        {/* Container for main content with background and spacing */}\n        <div className=\"bg-light-muted dark:bg-dark-muted duration-100 rounded-xl p-4 m-auto grid grid-cols-1 lg:grid-cols-4 gap-4\">\n          <main className=\"grid gap-4 lg:col-span-3\">\n            {/* Currency and SearchBar Section */}\n            <div className=\"grid gap-4 grid-cols-9 grid-rows-1\">\n              {/* Currency Component */}\n              <section className=\"dashboard_item col-span-2 text-light-base dark:text-dark-base text-sm sm:text-base\">\n                <Currency />\n              </section>\n\n              {/* SearchBar Component */}\n              <section className=\"dashboard_item col-span-7 bg-light-fill dark:bg-dark-fill text-light-base dark:text-dark-base\">\n                <SearchBar currency={currency} symbol={symbol} />\n              </section>\n            </div>\n\n            {/* Charts Section */}\n            <section className=\"dashboard_item h-[525px] bg-light-fill dark:bg-dark-fill text-light-base dark:text-dark-base\">\n              <Charts currency={currency} symbol={symbol} />\n            </section>\n\n            {/* Portfolio and Exchange Section */}\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              {/* Portfolio Component */}\n              <section className=\"dashboard_item md:col-span-1 bg-light-fill dark:bg-dark-fill text-light-base dark:text-dark-base\">\n                <Portfolio />\n              </section>\n\n              {/* Exchange Component */}\n              <section className=\"dashboard_item md:col-span-1 bg-light-fill dark:bg-dark-fill text-light-base dark:text-dark-base\">\n                <Exchange />\n              </section>\n            </div>\n          </main>\n\n          {/* TopCoins Section */}\n          <aside className=\" dashboard_item lg:col-span-1 bg-light-fill dark:bg-dark-fill text-light-base dark:text-dark-base\">\n            <TopCoins currency={currency} />\n          </aside>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"names":["compactNumbers","number","Intl","NumberFormat","notation","format","filteredData","data","interval","Math","floor","length","currentIndex","selectedItems","i","push","getRandomColor","letters","split","color","random","Calendar","dispatch","useDispatch","fromDate","useSelector","state","globalStore","toDate","from","Date","getTime","to","currency","coinIDs","dropdownVisible","setDropdownVisible","useState","isSubmitted","setIsSubmitted","_jsxs","className","children","_jsx","concat","onClick","xmlns","width","height","fill","viewBox","d","htmlFor","id","type","value","onChange","e","setFromDate","target","setToDate","handleClick","forEach","fetchAsyncHistoricDataRange","setIsCustomRange","_ref","chartDays","setDays","setSelectedValue","selectedValue","map","day","label","ChartJS","register","BarElement","LinearScale","PointElement","CategoryScale","Legend","Tooltip","options","chartType","style","position","marginTop","Bar","LineElement","Line","HorizontalBarChart","ChartType","charts","isOpen","setIsOpen","ref","useRef","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","chart","setChartType","coins","searchTerm","setSearchTerm","selectedCoins","coinID","setSelectedCoins","filter","coin","name","setCoinIDs","filteredOptions","toLowerCase","includes","prevState","join","placeholder","disabled","checked","handleCheckboxChange","option","selectedOption","selectedID","Charts","days","symbol","isCustomRange","marketCapData","market","loading","fetchAsyncHistoricData","clearData","getAllCoins","cdata","labels","date","time","getHours","toLocaleDateString","month","datasets","Object","keys","datum","borderColor","tension","pointColor","backgroundColor","hitRadius","hoverRadius","indexAxis","interaction","intersect","mode","aspectRatio","responsive","maintainAspectRatio","scales","x","ticks","callback","index","maxTicksLimit","grid","borderWidth","borderDash","borderDashOffset","y","plugins","tooltip","callbacks","context","dataset","parsed","title","display","text","datalabels","legend","fullWidth","usePointStyle","font","size","weight","Fragment","ButtonGroup","MultiCoinSelectionBtn","ChartCanvas","currencySymbols","btc","eth","ltc","bch","bnb","eos","xrp","xlm","link","dot","aed","ars","aud","bdt","brl","cad","clp","cny","czk","dkk","hkd","huf","idr","kwd","lkr","mmk","mxn","myr","ngn","nok","nzd","pkr","pln","rub","sar","sek","sgd","thb","try","uah","vef","zar","bits","sats","Currency","currencies","error","fetchAsyncCurrencies","toUpperCase","setCurrency","setSymbol","currencyName","formatted","slice","convertCurrency","setPrice","search","inputValue","setInputValue","selected","setSelected","substring","_coin$name","_coin$name2","startsWith","_coin$name3","Exchange","amount","setAmount","exchangeResult","setExchangeResult","setError","sellPrice","price_s","buyPrice","price_b","DropDown","setPrice_s","min","required","setPrice_b","isNaN","convertExchangeRates","console","log","Number","toFixed","current_price","Header","theme","setTheme","element","documentElement","classList","add","remove","src","alt","icon","portfolioDetails","ArcElement","ChartDataLabels","chartData","hoverOffset","Pie","padding","align","formatter","Portfolio","totalValue","reduce","sum","p","PieChart","setCoin","coinIds","preventDefault","image","SearchBar","setSearch","onSubmit","searchWord","filteredArray","FilteredSearch","market_cap","price_change_percentage_24h","upArrow","downArrow","CoinList","CoinCard","setLoading","fetchAsyncCoins","TopCoins"],"sourceRoot":""}